---
- name: Install postgresql and prereqs
  apt:
    pkg: '{{ item }}'
    state: latest
    update_cache: yes
    cache_valid_time: 86400
    install_recommends: yes
  with_items: '{{ kernel_postgresql_packages }}'
  sudo: yes

- name: Place postgresql conf files
  copy:
    dest: '{{ item.dest }}'
    src: '{{ item.src }}'
    owner: '{{ kernel_postgresql_bootstrap_user }}'
    group: '{{ kernel_postgresql_bootstrap_user }}'
    mode: u=rw,g=r,o=
  sudo: yes
  with_items:
    - { src: 'pg_hba.conf', dest: '/etc/postgresql/9.3/main/pg_hba.conf' }
    - { src: 'postgresql.conf', dest: '/etc/postgresql/9.3/main/postgresql.conf' }

- name: Start postgresql
  service:
    name: postgresql
    state: restarted
  sudo: yes

- name: Create user
  postgresql_user:
    name: '{{ kernel_postgresql_username }}'
    password: '{{ kernel_postgresql_password }}'
    state: present
  sudo: yes
  sudo_user: '{{ kernel_postgresql_bootstrap_user }}'

- name: Create dbs
  postgresql_db:
    name: '{{ item }}'
    encoding: 'UTF-8'
    state: present
    owner: '{{ kernel_postgresql_username }}'
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
  sudo: yes
  sudo_user: '{{ kernel_postgresql_bootstrap_user }}'  
  with_items: '{{ kernel_postgresql_databases }}'

- name: Give user privileges
  postgresql_user:
    name: '{{ kernel_postgresql_username }}'
    db: '{{ item }}'
    priv: ALL
    role_attr_flags: SUPERUSER
  sudo: yes
  sudo_user: '{{ kernel_postgresql_bootstrap_user }}'  
  with_items: '{{ kernel_postgresql_databases }}'

- name: Create .pgpass
  file:
    path: ~{{ kernel_postgresql_username }}/.pgpass
    state: touch
    owner: '{{ kernel_postgresql_username }}'
    group: '{{ kernel_postgresql_username }}'
    mode: u=rw,g=,o=
  sudo: yes

- name: Set up .pgpass
  lineinfile:
    dest: ~{{ kernel_postgresql_username }}/.pgpass
    line: '{{ kernel_postgresql_host }}:{{ kernel_postgresql_port }}:{{ item }}:{{ kernel_postgresql_username }}:{{ kernel_postgresql_password }}'
    state: present
    owner: '{{ kernel_postgresql_username }}'
    group: '{{ kernel_postgresql_username }}'
    mode: u=rw,g=,o=
  sudo: yes
  with_items: '{{ kernel_postgresql_databases }}'
