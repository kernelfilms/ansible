user {{ kernel_nginx_user }};
worker_processes {{ kernel_nginx_worker_count }};
pid {{ kernel_nginx_pid }};

events {
  worker_connections 768;
  # multi_accept on;
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  # server_tokens off;

  server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Logging Settings
  ##

  access_log {{ kernel_nginx_access_log }};
  error_log {{ kernel_nginx_error_log }};

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";

  ##
  # Virtual Host Configs
  ##

  include /etc/nginx/conf.d/*.conf;

  upstream upstream_application {
    server {{ kernel_nginx_upstream_host }}:{{ kernel_nginx_upstream_port }} fail_timeout=0;
  }


  server {
    server_name {{ kernel_nginx_server_name }} {{ kernel_nginx_server_ip }};
#    root {{ kernel_nginx_root }};
    listen 443;
    client_max_body_size 4G;
    keepalive_timeout 5;

    ssl on;
    ssl_certificate {{ kernel_nginx_ssl_directory }}/cert.crt;
    ssl_certificate_key {{ kernel_nginx_ssl_directory }}/cert.key;
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=157783680; includeSubdomains";
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    location / {
      try_files $uri @app;
    }

    location @app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;

      proxy_redirect off;
      proxy_pass http://upstream_application;
    }

    {% if kernel_nginx_expose_status_locally %}
    location {{ kernel_nginx_status_location }} {
        stub_status on;

        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    {% endif %}
  }

  server {
    listen 80;
    server_name {{ kernel_nginx_server_name }} {{ kernel_nginx_server_ip }};
    return 301 https://$server_name$request_uri;
  }
}
